/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Account {
  accessToken: string | null;
  accessTokenExpiresAt: Timestamp | null;
  accountId: string;
  createdAt: Timestamp;
  id: string;
  idToken: string | null;
  password: string | null;
  providerId: string;
  refreshToken: string | null;
  refreshTokenExpiresAt: Timestamp | null;
  scope: string | null;
  updatedAt: Timestamp;
  userId: string;
}

export interface ChatCompletion {
  completionTokens: number;
  createdAt: Generated<Timestamp>;
  id: Generated<number>;
  modelId: string;
  promptTokens: number;
  userId: string;
}

export interface ExternalIntegration {
  createdAt: Generated<Timestamp>;
  id: Generated<number>;
  payload: Json;
  provider: string;
  updatedAt: Generated<Timestamp>;
  userId: string;
  vendorIntegrationId: string;
}

export interface MonthlyUsage {
  count: Generated<number>;
  id: Generated<number>;
  modelId: string;
  startDayOfMonth: Timestamp;
  userId: string;
}

export interface Session {
  createdAt: Timestamp;
  expiresAt: Timestamp;
  id: string;
  impersonatedBy: string | null;
  ipAddress: string | null;
  token: string;
  updatedAt: Timestamp;
  userAgent: string | null;
  userId: string;
}

export interface Subscription {
  cancelAtPeriodEnd: boolean | null;
  id: string;
  periodEnd: Timestamp | null;
  periodStart: Timestamp | null;
  plan: string;
  referenceId: string;
  seats: number | null;
  status: string;
  stripeCustomerId: string | null;
  stripeSubscriptionId: string | null;
}

export interface Task {
  createdAt: Generated<Timestamp>;
  environment: Generated<Json>;
  event: Json | null;
  id: Generated<number>;
  messages: Generated<Json>;
  status: Generated<string>;
  updatedAt: Generated<Timestamp>;
  userId: string;
}

export interface User {
  banExpires: Timestamp | null;
  banned: boolean | null;
  banReason: string | null;
  createdAt: Timestamp;
  email: string;
  emailVerified: boolean;
  id: string;
  image: string | null;
  name: string;
  role: string | null;
  stripeCustomerId: string | null;
  updatedAt: Timestamp;
}

export interface Verification {
  createdAt: Timestamp | null;
  expiresAt: Timestamp;
  id: string;
  identifier: string;
  updatedAt: Timestamp | null;
  value: string;
}

export interface DB {
  account: Account;
  chatCompletion: ChatCompletion;
  externalIntegration: ExternalIntegration;
  monthlyUsage: MonthlyUsage;
  session: Session;
  subscription: Subscription;
  task: Task;
  user: User;
  verification: Verification;
}
