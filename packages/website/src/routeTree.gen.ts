/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthPathnameImport } from './routes/auth/$pathname'
import { Route as AuthenticatedSettingsRouteImport } from './routes/_authenticated._settings/route'
import { Route as AuthenticatedAuthDeviceLinkImport } from './routes/_authenticated.auth/device-link'
import { Route as AuthenticatedSettingsUsageImport } from './routes/_authenticated._settings/usage'
import { Route as AuthenticatedSettingsModelImport } from './routes/_authenticated._settings/model'
import { Route as AuthenticatedSettingsBillingImport } from './routes/_authenticated._settings/billing'
import { Route as AuthenticatedSettingsAccountImport } from './routes/_authenticated._settings/account'

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthPathnameRoute = AuthPathnameImport.update({
  id: '/auth/$pathname',
  path: '/auth/$pathname',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedSettingsRouteRoute = AuthenticatedSettingsRouteImport.update(
  {
    id: '/_settings',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
)

const AuthenticatedAuthDeviceLinkRoute =
  AuthenticatedAuthDeviceLinkImport.update({
    id: '/auth/device-link',
    path: '/auth/device-link',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedSettingsUsageRoute = AuthenticatedSettingsUsageImport.update(
  {
    id: '/usage',
    path: '/usage',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any,
)

const AuthenticatedSettingsModelRoute = AuthenticatedSettingsModelImport.update(
  {
    id: '/model',
    path: '/model',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any,
)

const AuthenticatedSettingsBillingRoute =
  AuthenticatedSettingsBillingImport.update({
    id: '/billing',
    path: '/billing',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

const AuthenticatedSettingsAccountRoute =
  AuthenticatedSettingsAccountImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_settings': {
      id: '/_authenticated/_settings'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedSettingsRouteImport
      parentRoute: typeof AuthenticatedImport
    }
    '/auth/$pathname': {
      id: '/auth/$pathname'
      path: '/auth/$pathname'
      fullPath: '/auth/$pathname'
      preLoaderRoute: typeof AuthPathnameImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_settings/account': {
      id: '/_authenticated/_settings/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/_settings/billing': {
      id: '/_authenticated/_settings/billing'
      path: '/billing'
      fullPath: '/billing'
      preLoaderRoute: typeof AuthenticatedSettingsBillingImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/_settings/model': {
      id: '/_authenticated/_settings/model'
      path: '/model'
      fullPath: '/model'
      preLoaderRoute: typeof AuthenticatedSettingsModelImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/_settings/usage': {
      id: '/_authenticated/_settings/usage'
      path: '/usage'
      fullPath: '/usage'
      preLoaderRoute: typeof AuthenticatedSettingsUsageImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/auth/device-link': {
      id: '/_authenticated/auth/device-link'
      path: '/auth/device-link'
      fullPath: '/auth/device-link'
      preLoaderRoute: typeof AuthenticatedAuthDeviceLinkImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedSettingsRouteRouteChildren {
  AuthenticatedSettingsAccountRoute: typeof AuthenticatedSettingsAccountRoute
  AuthenticatedSettingsBillingRoute: typeof AuthenticatedSettingsBillingRoute
  AuthenticatedSettingsModelRoute: typeof AuthenticatedSettingsModelRoute
  AuthenticatedSettingsUsageRoute: typeof AuthenticatedSettingsUsageRoute
}

const AuthenticatedSettingsRouteRouteChildren: AuthenticatedSettingsRouteRouteChildren =
  {
    AuthenticatedSettingsAccountRoute: AuthenticatedSettingsAccountRoute,
    AuthenticatedSettingsBillingRoute: AuthenticatedSettingsBillingRoute,
    AuthenticatedSettingsModelRoute: AuthenticatedSettingsModelRoute,
    AuthenticatedSettingsUsageRoute: AuthenticatedSettingsUsageRoute,
  }

const AuthenticatedSettingsRouteRouteWithChildren =
  AuthenticatedSettingsRouteRoute._addFileChildren(
    AuthenticatedSettingsRouteRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedSettingsRouteRoute: typeof AuthenticatedSettingsRouteRouteWithChildren
  AuthenticatedAuthDeviceLinkRoute: typeof AuthenticatedAuthDeviceLinkRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedSettingsRouteRoute: AuthenticatedSettingsRouteRouteWithChildren,
  AuthenticatedAuthDeviceLinkRoute: AuthenticatedAuthDeviceLinkRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/auth/$pathname': typeof AuthPathnameRoute
  '/account': typeof AuthenticatedSettingsAccountRoute
  '/billing': typeof AuthenticatedSettingsBillingRoute
  '/model': typeof AuthenticatedSettingsModelRoute
  '/usage': typeof AuthenticatedSettingsUsageRoute
  '/auth/device-link': typeof AuthenticatedAuthDeviceLinkRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/auth/$pathname': typeof AuthPathnameRoute
  '/account': typeof AuthenticatedSettingsAccountRoute
  '/billing': typeof AuthenticatedSettingsBillingRoute
  '/model': typeof AuthenticatedSettingsModelRoute
  '/usage': typeof AuthenticatedSettingsUsageRoute
  '/auth/device-link': typeof AuthenticatedAuthDeviceLinkRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_authenticated/_settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/auth/$pathname': typeof AuthPathnameRoute
  '/_authenticated/_settings/account': typeof AuthenticatedSettingsAccountRoute
  '/_authenticated/_settings/billing': typeof AuthenticatedSettingsBillingRoute
  '/_authenticated/_settings/model': typeof AuthenticatedSettingsModelRoute
  '/_authenticated/_settings/usage': typeof AuthenticatedSettingsUsageRoute
  '/_authenticated/auth/device-link': typeof AuthenticatedAuthDeviceLinkRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/auth/$pathname'
    | '/account'
    | '/billing'
    | '/model'
    | '/usage'
    | '/auth/device-link'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/auth/$pathname'
    | '/account'
    | '/billing'
    | '/model'
    | '/usage'
    | '/auth/device-link'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/_authenticated/_settings'
    | '/auth/$pathname'
    | '/_authenticated/_settings/account'
    | '/_authenticated/_settings/billing'
    | '/_authenticated/_settings/model'
    | '/_authenticated/_settings/usage'
    | '/_authenticated/auth/device-link'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AuthPathnameRoute: typeof AuthPathnameRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AuthPathnameRoute: AuthPathnameRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/auth/$pathname"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/_settings",
        "/_authenticated/auth/device-link"
      ]
    },
    "/_authenticated/_settings": {
      "filePath": "_authenticated._settings/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/_settings/account",
        "/_authenticated/_settings/billing",
        "/_authenticated/_settings/model",
        "/_authenticated/_settings/usage"
      ]
    },
    "/auth/$pathname": {
      "filePath": "auth/$pathname.tsx"
    },
    "/_authenticated/_settings/account": {
      "filePath": "_authenticated._settings/account.tsx",
      "parent": "/_authenticated/_settings"
    },
    "/_authenticated/_settings/billing": {
      "filePath": "_authenticated._settings/billing.tsx",
      "parent": "/_authenticated/_settings"
    },
    "/_authenticated/_settings/model": {
      "filePath": "_authenticated._settings/model.tsx",
      "parent": "/_authenticated/_settings"
    },
    "/_authenticated/_settings/usage": {
      "filePath": "_authenticated._settings/usage.tsx",
      "parent": "/_authenticated/_settings"
    },
    "/_authenticated/auth/device-link": {
      "filePath": "_authenticated.auth/device-link.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
