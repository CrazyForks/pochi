/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as AuthPathnameImport } from './routes/auth/$pathname'
import { Route as AuthSettingsRouteImport } from './routes/_auth._settings/route'
import { Route as AuthAuthDeviceLinkImport } from './routes/_auth.auth/device-link'
import { Route as AuthSettingsUsageImport } from './routes/_auth._settings/usage'
import { Route as AuthSettingsModelImport } from './routes/_auth._settings/model'
import { Route as AuthSettingsBillingImport } from './routes/_auth._settings/billing'
import { Route as AuthSettingsAccountImport } from './routes/_auth._settings/account'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthPathnameRoute = AuthPathnameImport.update({
  id: '/auth/$pathname',
  path: '/auth/$pathname',
  getParentRoute: () => rootRoute,
} as any)

const AuthSettingsRouteRoute = AuthSettingsRouteImport.update({
  id: '/_settings',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAuthDeviceLinkRoute = AuthAuthDeviceLinkImport.update({
  id: '/auth/device-link',
  path: '/auth/device-link',
  getParentRoute: () => AuthRoute,
} as any)

const AuthSettingsUsageRoute = AuthSettingsUsageImport.update({
  id: '/usage',
  path: '/usage',
  getParentRoute: () => AuthSettingsRouteRoute,
} as any)

const AuthSettingsModelRoute = AuthSettingsModelImport.update({
  id: '/model',
  path: '/model',
  getParentRoute: () => AuthSettingsRouteRoute,
} as any)

const AuthSettingsBillingRoute = AuthSettingsBillingImport.update({
  id: '/billing',
  path: '/billing',
  getParentRoute: () => AuthSettingsRouteRoute,
} as any)

const AuthSettingsAccountRoute = AuthSettingsAccountImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => AuthSettingsRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_auth/_settings': {
      id: '/_auth/_settings'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthSettingsRouteImport
      parentRoute: typeof AuthImport
    }
    '/auth/$pathname': {
      id: '/auth/$pathname'
      path: '/auth/$pathname'
      fullPath: '/auth/$pathname'
      preLoaderRoute: typeof AuthPathnameImport
      parentRoute: typeof rootRoute
    }
    '/_auth/_settings/account': {
      id: '/_auth/_settings/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AuthSettingsAccountImport
      parentRoute: typeof AuthSettingsRouteImport
    }
    '/_auth/_settings/billing': {
      id: '/_auth/_settings/billing'
      path: '/billing'
      fullPath: '/billing'
      preLoaderRoute: typeof AuthSettingsBillingImport
      parentRoute: typeof AuthSettingsRouteImport
    }
    '/_auth/_settings/model': {
      id: '/_auth/_settings/model'
      path: '/model'
      fullPath: '/model'
      preLoaderRoute: typeof AuthSettingsModelImport
      parentRoute: typeof AuthSettingsRouteImport
    }
    '/_auth/_settings/usage': {
      id: '/_auth/_settings/usage'
      path: '/usage'
      fullPath: '/usage'
      preLoaderRoute: typeof AuthSettingsUsageImport
      parentRoute: typeof AuthSettingsRouteImport
    }
    '/_auth/auth/device-link': {
      id: '/_auth/auth/device-link'
      path: '/auth/device-link'
      fullPath: '/auth/device-link'
      preLoaderRoute: typeof AuthAuthDeviceLinkImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthSettingsRouteRouteChildren {
  AuthSettingsAccountRoute: typeof AuthSettingsAccountRoute
  AuthSettingsBillingRoute: typeof AuthSettingsBillingRoute
  AuthSettingsModelRoute: typeof AuthSettingsModelRoute
  AuthSettingsUsageRoute: typeof AuthSettingsUsageRoute
}

const AuthSettingsRouteRouteChildren: AuthSettingsRouteRouteChildren = {
  AuthSettingsAccountRoute: AuthSettingsAccountRoute,
  AuthSettingsBillingRoute: AuthSettingsBillingRoute,
  AuthSettingsModelRoute: AuthSettingsModelRoute,
  AuthSettingsUsageRoute: AuthSettingsUsageRoute,
}

const AuthSettingsRouteRouteWithChildren =
  AuthSettingsRouteRoute._addFileChildren(AuthSettingsRouteRouteChildren)

interface AuthRouteChildren {
  AuthSettingsRouteRoute: typeof AuthSettingsRouteRouteWithChildren
  AuthAuthDeviceLinkRoute: typeof AuthAuthDeviceLinkRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSettingsRouteRoute: AuthSettingsRouteRouteWithChildren,
  AuthAuthDeviceLinkRoute: AuthAuthDeviceLinkRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthSettingsRouteRouteWithChildren
  '/auth/$pathname': typeof AuthPathnameRoute
  '/account': typeof AuthSettingsAccountRoute
  '/billing': typeof AuthSettingsBillingRoute
  '/model': typeof AuthSettingsModelRoute
  '/usage': typeof AuthSettingsUsageRoute
  '/auth/device-link': typeof AuthAuthDeviceLinkRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthSettingsRouteRouteWithChildren
  '/auth/$pathname': typeof AuthPathnameRoute
  '/account': typeof AuthSettingsAccountRoute
  '/billing': typeof AuthSettingsBillingRoute
  '/model': typeof AuthSettingsModelRoute
  '/usage': typeof AuthSettingsUsageRoute
  '/auth/device-link': typeof AuthAuthDeviceLinkRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_auth/_settings': typeof AuthSettingsRouteRouteWithChildren
  '/auth/$pathname': typeof AuthPathnameRoute
  '/_auth/_settings/account': typeof AuthSettingsAccountRoute
  '/_auth/_settings/billing': typeof AuthSettingsBillingRoute
  '/_auth/_settings/model': typeof AuthSettingsModelRoute
  '/_auth/_settings/usage': typeof AuthSettingsUsageRoute
  '/_auth/auth/device-link': typeof AuthAuthDeviceLinkRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/auth/$pathname'
    | '/account'
    | '/billing'
    | '/model'
    | '/usage'
    | '/auth/device-link'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/auth/$pathname'
    | '/account'
    | '/billing'
    | '/model'
    | '/usage'
    | '/auth/device-link'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_auth/_settings'
    | '/auth/$pathname'
    | '/_auth/_settings/account'
    | '/_auth/_settings/billing'
    | '/_auth/_settings/model'
    | '/_auth/_settings/usage'
    | '/_auth/auth/device-link'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  AuthPathnameRoute: typeof AuthPathnameRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  AuthPathnameRoute: AuthPathnameRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/auth/$pathname"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/_settings",
        "/_auth/auth/device-link"
      ]
    },
    "/_auth/_settings": {
      "filePath": "_auth._settings/route.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/_settings/account",
        "/_auth/_settings/billing",
        "/_auth/_settings/model",
        "/_auth/_settings/usage"
      ]
    },
    "/auth/$pathname": {
      "filePath": "auth/$pathname.tsx"
    },
    "/_auth/_settings/account": {
      "filePath": "_auth._settings/account.tsx",
      "parent": "/_auth/_settings"
    },
    "/_auth/_settings/billing": {
      "filePath": "_auth._settings/billing.tsx",
      "parent": "/_auth/_settings"
    },
    "/_auth/_settings/model": {
      "filePath": "_auth._settings/model.tsx",
      "parent": "/_auth/_settings"
    },
    "/_auth/_settings/usage": {
      "filePath": "_auth._settings/usage.tsx",
      "parent": "/_auth/_settings"
    },
    "/_auth/auth/device-link": {
      "filePath": "_auth.auth/device-link.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
